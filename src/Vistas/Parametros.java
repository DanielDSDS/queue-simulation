/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import Componentes.ManejoArchivo;
import Componentes.TablaDistribuciones;
import Funciones.Alerta;
import Funciones.Numerico;
import javax.swing.JTextField;

public class Parametros extends javax.swing.JFrame {
    
    
    private TablaDistribuciones tablaLlegadasM  = new TablaDistribuciones();
    private TablaDistribuciones tablaLlegadasA  = new TablaDistribuciones();
    private TablaDistribuciones tablaServidoresA  = new TablaDistribuciones();
    private TablaDistribuciones tablaServidoresM  = new TablaDistribuciones();
    private TablaDistribuciones tablaLlegada = new TablaDistribuciones();
    private int valorDuracion;
    private int valorTiempoSimulacion;
    private int valorNumEtapas;
    private int valorCostoCliente;
    private int valorCostoServidor;
    private int seleccion;
    /**
     * Creates new form Prueba
     */
    public Parametros() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        titulo = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel12.setVisible(false);
        jLabel13.setVisible(false);
        jLabel15.setVisible(false);
        jLabel16.setVisible(false);
        manualLlegada = new javax.swing.JRadioButton();
        archivoLlegada = new javax.swing.JRadioButton();
        manualServicios = new javax.swing.JRadioButton();
        archivoServicio = new javax.swing.JRadioButton();
        simular = new javax.swing.JButton();
        archivoLlegada.setSelected(true);
        archivoServicio.setSelected(true);
        valorLlegada = new javax.swing.JTextField();
        valorServidor = new javax.swing.JTextField();
        unidadTiempo = new javax.swing.JComboBox<>();
        tiempoSimulacion = new javax.swing.JTextField();
        porcentajeLlegada = new javax.swing.JTextField();
        porcentajeServidor = new javax.swing.JTextField();
        agregarLlegada = new javax.swing.JButton();
        agregarServidor = new javax.swing.JButton();
        agregarLlegada.setVisible(false);
        agregarServidor.setVisible(false);
        porcentajeLlegada.setVisible(false);
        porcentajeServidor.setVisible(false);
        valorLlegada.setVisible(false);
        valorServidor.setVisible(false);
        tablaLlegadasArchivo = new javax.swing.JTextArea();
        tablaLlegadasManual = new javax.swing.JTextArea();
        tablaServidoresArchivo = new javax.swing.JTextArea();
        tablaServidoresManual = new javax.swing.JTextArea();
        leerArchivoServidor = new javax.swing.JButton();
        leerArchivoLlegada = new javax.swing.JButton();
        costoCliente = new javax.swing.JTextField();
        costoServidor = new javax.swing.JTextField();
        duracion = new javax.swing.JTextField();
        maxServidores = new javax.swing.JTextField();
        maxClientes = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        jScrollPane2.setVisible(true);
        jScrollPane4.setVisible(true);
        unidadLabel = new javax.swing.JLabel();
        unidad = new javax.swing.JComboBox<>();
        unidadLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(232, 225, 225));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        titulo.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        titulo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        titulo.setText("Simulador de Colas");
        jPanel1.add(titulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 10, 790, 42));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setText("Di Mella, D. Bermudez, D");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 50, -1, 11));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("Ingeniería Informatica");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 70, -1, 15));

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setText("Unidad de tiempo a utilizar");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 110, -1, -1));

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setText("Duración de la simulación");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 140, -1, -1));

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setText("Tiempo de la simulación");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 170, -1, -1));

        jLabel6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel6.setText("Costo de espera del cliente por unidad de tiempo ($)");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 260, -1, -1));

        jLabel7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel7.setText("Costo por servidor");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 290, -1, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Tiempos entre llegadas");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 320, -1, 20));

        manualLlegada.setBackground(new java.awt.Color(232, 225, 225));
        buttonGroup1.add(manualLlegada);
        manualLlegada.setText("Manual");
        jPanel1.add(manualLlegada, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 340, -1, -1));
        manualLlegada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
              leerArchivoLlegada.setVisible(false);
              jScrollPane1.setVisible(false);
              jLabel12.setVisible(true);
              jLabel13.setVisible(true);
              agregarLlegada.setVisible(true);
              porcentajeLlegada.setVisible(true);
              valorLlegada.setVisible(true);
              jScrollPane2.setVisible(true);
            }
        });

        archivoLlegada.setBackground(new java.awt.Color(232, 225, 225));
        buttonGroup1.add(archivoLlegada);
        archivoLlegada.setText("Archivo");
        jPanel1.add(archivoLlegada, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 340, -1, -1));
        archivoLlegada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
              jLabel12.setVisible(false);
              jLabel13.setVisible(false);
              jScrollPane2.setVisible(false);
              porcentajeLlegada.setVisible(false);
              valorLlegada.setVisible(false);
              agregarLlegada.setVisible(false);
              leerArchivoLlegada.setVisible(true);
              jScrollPane1.setVisible(true);
            }
        });

        leerArchivoLlegada.setText("Abrir archivo");
        leerArchivoLlegada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leerArchivoLlegadaActionPerformed(evt);
            }
        });

        jPanel1.add(leerArchivoLlegada, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 380, -1, 20));

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 420, 570, 120));
        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 420, 570, 120));

        jLabel12.setText("Valor:");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 380, -1, -1));
        jPanel1.add(valorLlegada, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 380, 38, -1));

        jLabel13.setText("Porcentaje:");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 380, -1, -1));
        jPanel1.add(porcentajeLlegada, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 380, 42, -1));

        agregarLlegada.setText("Agregar");
        jPanel1.add(agregarLlegada, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 380, 90, 20));
        agregarLlegada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarLlegadaActionPerformed(evt);
            }
        });

        //Tiempo de servicios

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setText("Tiempos de Servicios");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 560, -1, 20));

        manualServicios.setBackground(new java.awt.Color(232, 225, 225));
        buttonGroup2.add(manualServicios);
        manualServicios.setText("Manual");
        jPanel1.add(manualServicios, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 580, -1, -1));
        manualServicios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
              leerArchivoServidor.setVisible(false);
              jScrollPane3.setVisible(false);
              jLabel15.setVisible(true);
              jLabel16.setVisible(true);
              agregarServidor.setVisible(true);
              porcentajeServidor.setVisible(true);
              valorServidor.setVisible(true);
              jScrollPane4.setVisible(true);
            }
        });

        archivoServicio.setBackground(new java.awt.Color(232, 225, 225));
        buttonGroup2.add(archivoServicio);
        archivoServicio.setText("Archivo");
        jPanel1.add(archivoServicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 580, -1, -1));
        archivoServicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
              jLabel15.setVisible(false);
              jLabel16.setVisible(false);
              jScrollPane4.setVisible(false);
              porcentajeServidor.setVisible(false);
              valorServidor.setVisible(false);
              agregarServidor.setVisible(false);
              leerArchivoServidor.setVisible(true);
              jScrollPane3.setVisible(true);
            }
        });

        leerArchivoServidor.setText("Abrir archivo");
        leerArchivoServidor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leerArchivoServicioActionPerformed(evt);
            }
        });
        jPanel1.add(leerArchivoServidor, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 610, -1, 20));

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 650, 570, 120));
        jPanel1.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 650, 570, 120));

        jLabel15.setText("Valor:");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 610, -1, -1));
        jPanel1.add(valorServidor, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 610, 38, -1));

        jLabel16.setText("Porcentaje:");
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 610, -1, -1));
        jPanel1.add(porcentajeServidor, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 610, 42, -1));

        agregarServidor.setText("Agregar");
        jPanel1.add(agregarServidor, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 610, 90, 20));
        agregarServidor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarServidorActionPerformed(evt);
            }
        });
      
        simular.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        simular.setText("Simular");
        jPanel1.add(simular, new org.netbeans.lib.awtextra.AbsoluteConstraints(265, 790, 120, 30));
        simular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simularActionPerformed(evt);
            }
        });

        tablaLlegadasArchivo.setColumns(40);
        tablaLlegadasArchivo.setRows(5);
        jScrollPane1.setViewportView(tablaLlegadasArchivo);

        tablaLlegadasManual.setColumns(40);
        tablaLlegadasManual.setRows(5);
        jScrollPane2.setViewportView(tablaLlegadasManual);

        tablaServidoresArchivo.setColumns(40);
        tablaServidoresArchivo.setRows(5);
        jScrollPane3.setViewportView(tablaServidoresArchivo);

        tablaServidoresManual.setColumns(40);
        tablaServidoresManual.setRows(5);
        jScrollPane4.setViewportView(tablaServidoresManual);

        unidadTiempo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Minutos", "Horas", "Dias", "Semanas", "Meses", "Años" }));
        jPanel1.add(unidadTiempo, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 170, -1, -1));
        jPanel1.add(tiempoSimulacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 140, 42, -1));
        jPanel1.add(maxClientes, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 200, 42, -1));
        jPanel1.add(maxServidores, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 230, 42, -1));
        jPanel1.add(costoCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 260, 42, -1));
        jPanel1.add(costoServidor, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 290, 42, -1));
        jPanel1.add(duracion, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 170, 42, -1));

        jLabel9.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel9.setText("Cantidad maxima de clientes");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 200, -1, -1));
        jPanel1.add(maxClientes, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 200, 42, -1));

        jLabel11.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel11.setText("Cantidad maxima de servidores");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 230, -1, -1));
        jPanel1.add(maxServidores, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 230, 42, -1));

        unidad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Segundos", "Minutos", "Horas", "Dias", "Semanas", "Meses", "Años" }));
        unidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unidadActionPerformed(evt);
            }
        });
        jPanel1.add(unidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 110, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, 400, 650, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 840, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void simularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_siguienteActionPerformed
        // TODO add your handling code here:
        if(!Numerico.isNumeric(this.duracion.getText())){
            Alerta.mensajeError("La duración de simulación debe ser un valor numerico");
            this.duracion.setText("");
            return;
        }else{
            if(Integer.parseInt(this.duracion.getText())<=0){
                Alerta.mensajeError("La duración de la simulación no es valida");
                this.duracion.setText("");
                return;
            }
        }
        if(!Numerico.isNumeric(this.tiempoSimulacion.getText())){
            Alerta.mensajeError("El tiempo de simulación debe ser un valor númerico");
            this.tiempoSimulacion.setText("");
            return;
        }else{
            if(Integer.parseInt(this.tiempoSimulacion.getText())<=0){
                Alerta.mensajeError("El tiempo a simular no es valido");
                this.tiempoSimulacion.setText("");
                return;
            }
        }
        if(!Numerico.isNumeric(this.costoCliente.getText())){
            Alerta.mensajeError("El costo de espera por cliente debe ser númerico");
            this.costoCliente.setText("");
            return;
        }else{
            if(Integer.parseInt(this.costoCliente.getText())<0){
                Alerta.mensajeError("El costo de espera del cliente no es valido");
                this.costoCliente.setText("");
                return;
            }
        }
        if(!Numerico.isNumeric(this.costoServidor.getText())){
            Alerta.mensajeError("El costo por servidor debe ser númerico");
            this.costoServidor.setText("");
            return;
        }else{
            if(Integer.parseInt(this.costoServidor.getText())<0){
                Alerta.mensajeError("El costo por servidor no es valido");
                this.costoServidor.setText("");
                return;
            }
        }
        if(!archivoLlegada.isSelected() && !manualLlegada.isSelected()){
            Alerta.mensajeError("No se selecciono una opcion para los tiempos entre llegadas");
            return;
        }
        
        if(manualLlegada.isSelected() && !this.tablaLlegadasM.completo()){
            Alerta.mensajeError("El parametro: TIEMPOS ENTRE LLEGADAS, no esta completo");
            return;
        }
        if(archivoLlegada.isSelected() && !this.tablaLlegadasA.completo()){
            Alerta.mensajeError("El parametro: TIEMPOS ENTRE LLEGADAS, no esta completo");
            return;
        }
        
        if(manualLlegada.isSelected())
            this.seleccion = 0;
        else
            this.seleccion = 1;
        this.valorDuracion = Integer.parseInt(this.duracion.getText());
        this.valorTiempoSimulacion = Integer.parseInt(this.tiempoSimulacion.getText());
        this.valorCostoCliente = Integer.parseInt(this.costoCliente.getText());
        this.valorCostoServidor = Integer.parseInt(this.costoServidor.getText());
        
        //this.setVisible(false);
        //ParametrosEtapas P = new ParametrosEtapas(this.valorNumEtapas,this);
        //P.setVisible(true);
    }//GEN-LAST:event_siguienteActionPerformed

    public int getValorDuracion() {
        return valorDuracion;
    }

    public int getValorTiempoSimulacion() {
        return valorTiempoSimulacion;
    }

    public int getValorNumEtapas() {
        return valorNumEtapas;
    }

    public int getValorCostoCliente() {
        return valorCostoCliente;
    }

    public int getValorCostoServidor() {
        return valorCostoServidor;
    }

    public String getUnidad() {
        return (String)unidad.getSelectedItem();
    }

    public String getUnidadTiempo() {
        return (String)unidadTiempo.getSelectedItem();
    }

    private void agregarLlegadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarLlegadaActionPerformed
        // TODO add your handling code here:
        if(!Numerico.isNumeric(this.valorLlegada.getText())){
            Alerta.mensajeError("El parametro: VALOR LLEGADA, no es numerico");
            this.valorLlegada.setText("");
            return;
        }else{
            if(Integer.parseInt(this.valorLlegada.getText())<=0){
                Alerta.mensajeError("El parametro: VALOR LLEGADA, no es valido");
                this.valorLlegada.setText("");
                return;
            }
        }
        if(!Numerico.isNumeric(this.porcentajeLlegada.getText())){
            Alerta.mensajeError("El parametro: PORCENTAJE LLEGADA, no es numerico");
            this.valorLlegada.setText("");
            return;
        }else{
            if(Integer.parseInt(this.porcentajeLlegada.getText())<=0){
                Alerta.mensajeError("El parametro: PORCENTAJE LLEGADA, no es valido");
                this.valorLlegada.setText("");
                return;
            }
        }
        this.tablaLlegadasM.addTiempo(Integer.parseInt(this.valorLlegada.getText()),Double.parseDouble(this.porcentajeLlegada.getText())/100);
        this.tablaLlegadasManual.setText(this.tablaLlegadasM.toString());
    }//GEN-LAST:event_agregarLlegadaActionPerformed

    private void agregarServidorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarLlegadaActionPerformed
        // TODO add your handling code here:
        if(!Numerico.isNumeric(this.valorServidor.getText())){
            Alerta.mensajeError("El parametro: VALOR LLEGADA, no es numerico");
            this.valorLlegada.setText("");
            return;
        }else{
            if(Integer.parseInt(this.valorServidor.getText())<=0){
                Alerta.mensajeError("El parametro: VALOR LLEGADA, no es valido");
                this.valorLlegada.setText("");
                return;
            }
        }
        if(!Numerico.isNumeric(this.porcentajeServidor.getText())){
            Alerta.mensajeError("El parametro: PORCENTAJE LLEGADA, no es numerico");
            this.valorLlegada.setText("");
            return;
        }else{
            if(Integer.parseInt(this.porcentajeServidor.getText())<=0){
                Alerta.mensajeError("El parametro: PORCENTAJE LLEGADA, no es valido");
                this.valorLlegada.setText("");
                return;
            }
        }
        this.tablaServidoresM.addTiempo(Integer.parseInt(this.valorServidor.getText()),Double.parseDouble(this.porcentajeServidor.getText())/100);
        this.tablaServidoresManual.setText(this.tablaServidoresM.toString());
    }//GEN-LAST:event_agregarLlegadaActionPerformed

    private void unidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unidadActionPerformed
        // TODO add your handling code here:
        this.unidadLabel.setText((String) this.unidad.getSelectedItem());
        this.unidadTiempo.removeAllItems();
        for(int i=this.unidad.getSelectedIndex();i<this.unidad.getItemCount();i++)
            if(!(i == this.unidad.getSelectedIndex()))
                this.unidadTiempo.addItem(this.unidad.getItemAt(i));
    }//GEN-LAST:event_unidadActionPerformed

    private void leerArchivoLlegadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leerArchivoActionPerformed
        ManejoArchivo M = new ManejoArchivo();
        M.leerArchivoLlegadas();
        this.tablaLlegadasA = M.getTablaLlegadas();
        this.tablaLlegadasArchivo.setText(tablaLlegadasA.toString());
    }//GEN-LAST:event_leerArchivoActionPerformed

    private void leerArchivoServicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leerArchivoActionPerformed
        ManejoArchivo M = new ManejoArchivo();
        M.leerArchivoServicios(0);
        this.tablaServidoresA = M.getTablaServicio();
        this.tablaServidoresArchivo.setText(tablaServidoresA.toString());
    }//GEN-LAST:event_leerArchivoActionPerformed
    
    
      
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton agregarLlegada;
    private javax.swing.JButton agregarServidor;
    private javax.swing.JRadioButton archivoLlegada;
    private javax.swing.JRadioButton archivoServicio;
    private javax.swing.JTextField costoCliente;
    private javax.swing.JTextField costoServidor;
    private javax.swing.JTextField duracion;
    private javax.swing.JTextField maxServidores;
    private javax.swing.JTextField maxClientes;
    private javax.swing.JButton leerArchivoLlegada; 
    private javax.swing.JButton leerArchivoServidor; 
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton manualLlegada;
    private javax.swing.JRadioButton manualServicios;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField tiempoSimulacion;
    private javax.swing.JTextField porcentajeLlegada;
    private javax.swing.JTextField porcentajeServidor;
    private javax.swing.JTextArea tablaLlegadasArchivo;
    private javax.swing.JTextArea tablaLlegadasManual;
    private javax.swing.JTextArea tablaServidoresArchivo;
    private javax.swing.JTextArea tablaServidoresManual;
    private javax.swing.JTextField valorLlegada;
    private javax.swing.JTextField valorServidor;
    private javax.swing.JButton simular;
    private javax.swing.JLabel titulo;
    private javax.swing.JComboBox<String> unidad;
    private javax.swing.JLabel unidadLabel;
    private javax.swing.JLabel unidadLabel2;
    private javax.swing.JComboBox<String> unidadTiempo;
    // End of variables declaration//GEN-END:variables
}
